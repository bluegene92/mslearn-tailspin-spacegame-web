trigger:
- '*'


pool:
  vmImage: 'ubuntu-16.04'
  demands: 
    - npm

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: 2.1.505

# steps:
# - script: dotnet build --configuration $(buildConfiguration)
#   displayName: 'dotnet build $(buildConfiguration)'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK 2.1.505'
  inputs:
    packageType: sdk
    version: $(dotnetSdkVersion)

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    command: install
    verbose: true

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info to buildinfo.txt'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - Release'
  inputs:
    command: build
    arguments: '--no-restore --configuration Release'
    projects: '**/*.csproj'



#publish build to zip file
- task: DotNetCoreCLI@2
  displayName: 'Publish the project - Debug'
  inputs:
    command: publish
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration Debug --output $(Build.ArtifactStagingDirectory)/Debug'
    zipAfterPublish: true

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - Release'
  inputs:
    command: publish
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/Release'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()